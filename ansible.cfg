# Example config file for ansible -- https://ansible.com/
# =======================================================

# Nearly all parameters can be overridden in ansible-playbook
# or with command line flags. Ansible will read ANSIBLE_CONFIG,
# ansible.cfg in the current working directory, .ansible.cfg in
# the home directory, or /etc/ansible/ansible.cfg, whichever it
# finds first

# For a full list of available options, run ansible-config list or see the
# documentation: https://docs.ansible.com/ansible/latest/reference_appendices/config.html.

[defaults]
# Paths to search for modules, colon separated
library = /usr/share/ansible/plugins/modules
# Paths to search for module utils, colon separated
module_utils = /usr/share/ansible/plugins/module_utils
# Paths to search for roles, colon separated
roles_path = /usr/share/ansible/roles
# Paths to search for collections, colon separated
collections_paths = /usr/share/ansible/collections


# Plays will gather facts by default, which contain information about the remote system.
# smart - gather by default, but don't regather if already gathered
# implicit - gather by default, turn off with gather_facts: False
# explicit - do not gather by default, must say gather_facts: True
gathering = explicit

# You can only have one 'stdout' callback type enabled at a time. The default
# is 'default'. The 'yaml' or 'debug' stdout callback plugins are easier to read.
#
#stdout_callback = yaml
stdout_callback = debug
#stdout_callback = default

# Logging is off by default unless this path is defined.
#
# create a log directory and open up permissions so all users
# (or perhaps all ansible users) can write to it:
#
# sudo mkdir /var/log/ansible
# sudo chmod 777 /var/log/ansible
#
log_path = /var/log/ansible/ansible.log

# By default, if a task in a playbook does not include a name: field then
# ansible-playbook will construct a header that includes the task's action but
# not the task's args. This is a security feature because ansible cannot know
# if the *module* considers an argument to be no_log at the time that the
# header is printed. If your environment doesn't have a problem securing
# stdout from ansible-playbook (or you have manually specified no_log in your
# playbook on all of the tasks where you have secret information) then you can
# safely set this to True to get more informative messages.
#
#display_args_to_stdout = False

# Host key checking is enabled by default
host_key_checking = False

# prevents logging of task data, off by default
no_log = False

# retry files
# When a playbook fails a .retry file can be created that will be placed in ~/
# You can enable this feature by setting retry_files_enabled to True
# and you can change the location of the files by setting retry_files_save_path
retry_files_enabled = False
# retry_files_save_path = ~/.ansible-retry

interpreter_python = python3
ansible_python_interpreter = /usr/bin/python3
deprecation_warnings = False

[ssh_connection]
# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
#
pipelining = True
